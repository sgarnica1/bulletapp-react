// THEME STYLES MIXIN
@mixin styles($mode) {

  @each $key,
  $map in $themes {

    @each $prop,
    $color in $map {
      @if $prop ==$mode {
        --#{$key}: #{$color};
      }
    }
  }
}

// MEDIA QUERIES
@mixin mq($min: null, $max: null) {
  $min-type: type-of($min);
  $max-type: type-of($max);

  @if $min-type==string {
    @if $min==xxs {
      $min: "(min-width: #{map-get($breakpoints, xxs)})";
    }

    @if $min==xs {
      $min: "(min-width: #{map-get($breakpoints, xs)})";
    }

    @else if $min==sm {
      $min: "(min-width: #{map-get($breakpoints, sm)})";
    }

    @else if $min==md {
      $min: "(min-width: #{map-get($breakpoints, md)})";
    }

    @else if $min==lg {
      $min: "(min-width: #{map-get($breakpoints, lg)})";
    }

    @else if $min==xl {
      $min: "(min-width: #{map-get($breakpoints, xl)})";
    }

    @else {
      @warn "mq mixin supports: xxs, xs, sm, md, lg, xl";
    }
  }

  @else if $min-type==number {
    $min: "(min-width: #{$min})";
  }

  @if $max-type==string {
    @if $max==xxs {
      $max: "(max-width: #{map-get($breakpoints, xxs) - 1})";
    }

    @if $max==xs {
      $max: "(max-width: #{map-get($breakpoints, xs) - 1})";
    }

    @else if $max==sm {
      $max: "(max-width: #{map-get($breakpoints, sm) - 1})";
    }

    @else if $max==md {
      $max: "(max-width: #{map-get($breakpoints, md) - 1})";
    }

    @else if $max==lg {
      $max: "(max-width: #{map-get($breakpoints, lg) - 1})";
    }

    @else if $max==xl {
      $max: "(max-width: #{map-get($breakpoints, xl) - 1})";
    }

    @else {
      @warn "mq mixin supports: xxs, xs, sm, md, lg, xl";
    }
  }

  @else if $max-type==number {
    $max: "(max-width: #{$max})";
  }

  $query: false;

  @if $min and $max {
    $query: "#{$min} and #{$max}";
  }

  @else if $min {
    $query: "#{$min}";
  }

  @else if $max {
    $query: "#{$max}";
  }

  @if (not $query) {
    @warn "Invalid media query";
  }

  @else {
    @media #{$query} {
      @content;
    }
  }
}